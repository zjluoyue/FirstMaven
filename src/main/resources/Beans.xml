<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:annotation-config/>

    <!--<bean id="hello" class="helloXml.Hello">-->
        <!--<property name="message" value="Hello World!"></property>-->
    <!--</bean>    -->

    <bean id="hello" class="helloXml.Hello">
        <property name="message1" value="Hello World!"></property>
        <property name="message2" value="Hello Second World!"></property>
    </bean>

    <bean id="helloChina" class="helloXml.HelloChina" parent="hello">
        <property name="message1" value="Hello China!"></property>
        <property name="message3" value="Hello, Welcome to China!"></property>
    </bean>

    <bean id="cStartedEventHandler" class="helloXml.CStartEventHandler"/>

    <bean id="cStoppedEventHandler" class="helloXml.CStopEventHandler"/>
    <!--<bean id="hello" class="helloXml.Hello" init-method="init" destroy-method="destroy">-->
        <!--<property name="message" value="Hello World!"></property>-->
    <!--</bean>-->

    <!--<bean class="helloXml.InitHello"></bean>-->

    <!-- Definition for textEditor bean -->
    <!--<bean id="textEditor" class="text.TextEditor">-->
        <!--<constructor-arg ref="spellChecker" />-->
    <!--</bean>-->

<!--    <bean id="textEditor" class="text.TextEditor"
          p:spellChecker-ref="spellChecker"
          autowire="byName">
        <property name="name" value="Generic Text Editor"/>
        &lt;!&ndash;<property name="spellChecker" ref="spellChecker"/>&ndash;&gt;
    </bean>
    &lt;!&ndash; Definition for spellChecker bean &ndash;&gt;
    <bean id="spellChecker" class="text.SpellChecker" />-->


    <!-- Definition for textEditor bean using inner bean -->
    <bean id="textEditor" class="text.TextEditor">
        <property name="name" value="Generic Text Editor"/>
    </bean>

    <bean id="SpellChecker" class="text.SpellChecker"/>

    <bean id="javaCollection" class="collection.JavaCollection">

        <!-- results in a setAddressList(java.util.List) call -->
        <property name="addressList">
            <list>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </list>
        </property>

        <!-- results in a setAddressSet(java.util.Set) call -->
        <property name="addressSet">
            <set>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </set>
        </property>

        <!-- results in a setAddressMap(java.util.Map) call -->
        <property name="addressMap">
            <map>
                <entry key="1" value="INDIA"/>
                <entry key="2" value="Pakistan"/>
                <entry key="3" value="USA"/>
                <entry key="4" value="USA"/>
            </map>
        </property>

        <!-- results in a setAddressProp(java.util.Properties) call -->
        <property name="addressProp">
            <props>
                <prop key="one">INDIA</prop>
                <prop key="two">Pakistan</prop>
                <prop key="three">USA</prop>
                <prop key="four">USA</prop>
            </props>
        </property>
    </bean>

    <bean id="customEventHandler"
          class="customEvent.CustomEventHandler"/>

    <bean id="customEventPublisher"
          class="customEvent.CustomEventPublisher"/>

    <aop:config>
        <aop:aspect id="log" ref="logging">
            <aop:pointcut id="selectAll" expression="execution(* advice.*.*(..))"/>
            <aop:before pointcut-ref="selectAll" method="beforeAdvice"/>
            <aop:after pointcut-ref="selectAll" method="afterAdvice"/>
            <aop:after-returning pointcut-ref="selectAll"
                                 returning="retVal"
                                 method="afterReturningAdvice"/>
            <aop:after-throwing pointcut-ref="selectAll"
                                throwing="ex"
                                method="afterThrowingAdvice"/>
        </aop:aspect>
    </aop:config>

    <bean id="logging" class="advice.Logging"/>

    <bean id="student" class="advice.Student">
        <property name="age" value="21"/>
        <property name="name" value="Zhang"/>
    </bean>
</beans>